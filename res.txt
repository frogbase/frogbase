<ref *1> ServerResponse {
  _events: [Object: null prototype] {
    finish: [ [Function: bound resOnFinish], [AsyncFunction (anonymous)] ]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  destroyed: false,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  maxRequestsOnConnectionReached: false,
  _defaultKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  strictContentLength: false,
  _contentLength: '86',
  _hasBody: true,
  _trailer: '',
  finished: true,
  _headerSent: true,
  _closed: false,
  _header: 'HTTP/1.1 403 Forbidden\r\n' +
    'X-Powered-By: Express\r\n' +
    'Vary: Origin, Accept-Encoding\r\n' +
    'Access-Control-Allow-Credentials: true\r\n' +
    'Access-Control-Allow-Origin: *\r\n' +
    'Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization\r\n' +
    'Content-Type: application/json; charset=utf-8\r\n' +
    'Content-Length: 86\r\n' +
    'ETag: W/"56-AMcd4yRMH9xeqE0eZdMPMzmkq4g"\r\n' +
    'Date: Sat, 13 Jan 2024 10:40:51 GMT\r\n' +
    'Connection: keep-alive\r\n' +
    'Keep-Alive: timeout=5\r\n' +
    '\r\n',
  _keepAliveTimeout: 5000,
  _onPendingData: [Function: bound updateOutgoingData],
  req: IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined,
      aborted: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 60295036
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      timeout: 5000,
      [Symbol(async_id_symbol)]: 4123,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 6173,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 4139,
        [Symbol(triggerId)]: 4136
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Content-Type',
      'application/json',
      'User-Agent',
      'PostmanRuntime/7.36.0',
      'Accept',
      '*/*',
      'Postman-Token',
      '0c394ae5-726f-4ecf-a4af-4d1160f3bfc7',
      'Host',
      'localhost:9000',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Connection',
      'keep-alive',
      'Content-Length',
      '70'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/api/auth/signin',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: null,
      _peername: [Object],
      timeout: 5000,
      [Symbol(async_id_symbol)]: 4123,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 6173,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 4139,
        [Symbol(triggerId)]: 4136
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/api/auth/signin',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/api/auth/signin',
      path: '/api/auth/signin',
      href: '/api/auth/signin',
      _raw: '/api/auth/signin'
    },
    params: {},
    query: {},
    res: [Circular *1],
    body: { email: 'sabikrahat72428@gmail.com', password: '@Rahat1235' },
    _body: true,
    length: undefined,
    _eventsCount: 0,
    _startAt: [ 1217539, 898746166 ],
    _startTime: 2024-01-13T10:40:51.625Z,
    _remoteAddress: '127.0.0.1',
    route: Route { path: '/signin', stack: [Array], methods: [Object] },
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      'content-type': 'application/json',
      'user-agent': 'PostmanRuntime/7.36.0',
      accept: '*/*',
      'postman-token': '0c394ae5-726f-4ecf-a4af-4d1160f3bfc7',
      host: 'localhost:9000',
      'accept-encoding': 'gzip, deflate, br',
      connection: 'keep-alive',
      'content-length': '70'
    },
    [Symbol(kHeadersCount)]: 16,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  },
  _sent100: false,
  _expect_continue: false,
  _maxRequestsPerSocket: 0,
  locals: [Object: null prototype] {},
  _startAt: [ 1217539, 977947291 ],
  _startTime: 2024-01-13T10:40:51.704Z,
  writeHead: [Function: writeHead],
  __onFinished: null,
  flush: [Function: flush],
  write: [Function: write],
  end: [Function: end],
  on: [Function: on],
  statusCode: 403,
  statusMessage: 'Forbidden',
  [Symbol(shapeMode)]: false,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesWritten)]: 0,
  [Symbol(kNeedDrain)]: false,
  [Symbol(corked)]: 0,
  [Symbol(kChunkedBuffer)]: [],
  [Symbol(kChunkedLength)]: 0,
  [Symbol(kSocket)]: null,
  [Symbol(kOutHeaders)]: [Object: null prototype] {
    'x-powered-by': [ 'X-Powered-By', 'Express' ],
    vary: [ 'Vary', 'Origin, Accept-Encoding' ],
    'access-control-allow-credentials': [ 'Access-Control-Allow-Credentials', 'true' ],
    'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ],
    'access-control-allow-headers': [
      'Access-Control-Allow-Headers',
      'Origin, X-Requested-With, Content-Type, Accept, Authorization'
    ],
    'content-type': [ 'Content-Type', 'application/json; charset=utf-8' ],
    'content-length': [ 'Content-Length', '86' ],
    etag: [ 'ETag', 'W/"56-AMcd4yRMH9xeqE0eZdMPMzmkq4g"' ]
  },
  [Symbol(errored)]: null,
  [Symbol(kHighWaterMark)]: 16384,
  [Symbol(kRejectNonStandardBodyWrites)]: false,
  [Symbol(kUniqueHeaders)]: null
}